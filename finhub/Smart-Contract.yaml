openapi: 3.0.1
info:
  title: Smart-Contract
  description: Erc20
  version: 1.0.0
servers:
  - url: 'https://gateway.finhub.cloud/erc20'
security:
  - default: []
paths:
  /:
    post:
      tags:
        - Smart Contract
      summary: Generate Address
      parameters:
        - name: tenantId
          in: header
          required: true
          style: simple
          explode: false
          schema:
            type: string
      requestBody:
        description: Sample Payload
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/CustomerWalletDto"
      responses:
        "200":
          description: successful operation
      security:
        - default: []
      x-throttling-tier: Unlimited
      x-auth-type: Application & Application User
      x-wso2-application-security:
        security-types:
          - oauth2
        optional: false
  /transactionHistoryByTenant:
    get:
      tags:
        - Smart Contract
      summary: Generate Transaction History
      parameters:
        - name: tenantId
          in: header
          required: true
          style: simple
          explode: false
          schema:
            type: string
        - name: page
          in: query
          required: false
          style: form
          explode: true
          schema:
            type: string
        - name: limits
          in: query
          required: false
          style: form
          explode: true
          schema:
            type: string
      responses:
        "200":
          description: successful operation
      security:
        - default: []
      x-throttling-tier: Unlimited
      x-auth-type: Application & Application User
      x-wso2-application-security:
        security-types:
          - oauth2
        optional: false
  /transactionHistoryByTenantAndStatus:
    get:
      tags:
        - Smart Contract
      summary: Generate Transaction History By Status
      parameters:
        - name: tenantId
          in: header
          required: true
          style: simple
          explode: false
          schema:
            type: string
      responses:
        "200":
          description: successful operation
      security:
        - default: []
      x-throttling-tier: Unlimited
      x-auth-type: Application & Application User
      x-wso2-application-security:
        security-types:
          - oauth2
        optional: false
  /getTransactionHistorySumByTenantAndStatus:
    get:
      tags:
        - Smart Contract
      summary: Generate Transaction History Sum By Status
      parameters:
        - name: tenantId
          in: header
          required: true
          style: simple
          explode: false
          schema:
            type: string
      responses:
        "200":
          description: successful operation
      security:
        - default: []
      x-throttling-tier: Unlimited
      x-auth-type: Application & Application User
      x-wso2-application-security:
        security-types:
          - oauth2
        optional: false
  /blockchainTransactions:
    post:
      tags:
        - Smart Contract
      summary: Get Block Chain Transaction History
      parameters:
        - name: tenantId
          in: header
          required: true
          style: simple
          explode: false
          schema:
            type: string
      requestBody:
        description: Sample Payload
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/TransactionsDto"
      responses:
        "200":
          description: successful operation
      security:
        - default: []
      x-throttling-tier: Unlimited
      x-auth-type: Application & Application User
      x-wso2-application-security:
        security-types:
          - oauth2
        optional: false
  /validateUSDT:
    post:
      tags:
        - Smart Contract
      summary: Validate USDT Transfer
      parameters:
        - name: tenantId
          in: header
          required: true
          style: simple
          explode: false
          schema:
            type: string
      requestBody:
        description: Sample Payload
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/ValidateUSDTDto"
      responses:
        "200":
          description: successful operation
      security:
        - default: []
      x-throttling-tier: Unlimited
      x-auth-type: Application & Application User
      x-wso2-application-security:
        security-types:
          - oauth2
        optional: false
  /getDataForSwap:
    post:
      tags:
        - Smart Contract
      summary: Swap Token for USDT
      parameters:
        - name: tenantId
          in: header
          required: true
          style: simple
          explode: false
          schema:
            type: string
      requestBody:
        description: Sample Payload
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/GetDataForSwapDto"
      responses:
        "200":
          description: successful operation
      security:
        - default: []
      x-throttling-tier: Unlimited
      x-auth-type: Application & Application User
      x-wso2-application-security:
        security-types:
          - oauth2
        optional: false
  /getDataForTokenReserve:
    post:
      tags:
        - Smart Contract
      summary: Reserve Tokens
      parameters:
        - name: tenantId
          in: header
          required: true
          style: simple
          explode: false
          schema:
            type: string
      requestBody:
        description: Sample Payload
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/GetDataForTokenReserveDto"
      responses:
        "200":
          description: successful operation
      security:
        - default: []
      x-throttling-tier: Unlimited
      x-auth-type: Application & Application User
      x-wso2-application-security:
        security-types:
          - oauth2
        optional: false
  /getDataForTokenTransfer:
    post:
      tags:
        - Smart Contract
      summary: Transfer Tokens To Merchants
      parameters:
        - name: tenantId
          in: header
          required: true
          style: simple
          explode: false
          schema:
            type: string
      requestBody:
        description: Sample Payload
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/GetDataForTokenTransferDto"
      responses:
        "200":
          description: successful operation
      security:
        - default: []
      x-throttling-tier: Unlimited
      x-auth-type: Application & Application User
      x-wso2-application-security:
        security-types:
          - oauth2
        optional: false
  /createOrder:
    post:
      tags:
        - Smart Contract
      summary: Transfer Tokens To Merchants
      parameters:
        - name: tenantId
          in: header
          required: true
          style: simple
          explode: false
          schema:
            type: string
      requestBody:
        description: Sample Payload
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/CreateOrderDto"
      responses:
        "200":
          description: successful operation
      security:
        - default: []
      x-throttling-tier: Unlimited
      x-auth-type: Application & Application User
      x-wso2-application-security:
        security-types:
          - oauth2
        optional: false
  /updateOrderStatus:
    post:
      tags:
        - Smart Contract
      summary: Transfer Tokens To Merchants
      parameters:
        - name: tenantId
          in: header
          required: true
          style: simple
          explode: false
          schema:
            type: string
      requestBody:
        description: Sample Payload
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/UpdateOrderStatusDto"
      responses:
        "200":
          description: successful operation
      security:
        - default: []
      x-throttling-tier: Unlimited
      x-auth-type: Application & Application User
      x-wso2-application-security:
        security-types:
          - oauth2
        optional: false
  /customerSellTokens:
    post:
      tags:
        - Smart Contract
      summary: Transfer Tokens To Merchants
      parameters:
        - name: tenantId
          in: header
          required: true
          style: simple
          explode: false
          schema:
            type: string
      requestBody:
        description: Sample Payload
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/UpdateBulkOrderStatusByCustomerIdDto"
      responses:
        "200":
          description: successful operation
      security:
        - default: []
      x-throttling-tier: Unlimited
      x-auth-type: Application & Application User
      x-wso2-application-security:
        security-types:
          - oauth2
        optional: false
  /transferEthereum:
    post:
      tags:
        - Smart Contract
      summary: Transfer To Ethereum
      parameters:
        - name: tenantId
          in: header
          required: true
          style: simple
          explode: false
          schema:
            type: string
      requestBody:
        description: Sample Payload
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/TransferCryptoDto"
      responses:
        "200":
          description: successful operation
      security:
        - default: []
      x-throttling-tier: Unlimited
      x-auth-type: Application & Application User
      x-wso2-application-security:
        security-types:
          - oauth2
        optional: false
  /transferUSDTtoPublicId:
    post:
      tags:
        - Smart Contract
      summary: >-
        Transfer USDT fron escrow contract (tenant account) to public id
        (etherium account)
      parameters:
        - name: tenantId
          in: header
          required: true
          style: simple
          explode: false
          schema:
            type: string
      requestBody:
        description: Sample Payload
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/TransferCryptoDto"
      responses:
        "200":
          description: successful operation
      security:
        - default: []
      x-throttling-tier: Unlimited
      x-auth-type: Application & Application User
      x-wso2-application-security:
        security-types:
          - oauth2
        optional: false
  /transferUSDTtoESCROW:
    post:
      tags:
        - Smart Contract
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/transferUSDTtoESCROWRequestDto"
          text/json:
            schema:
              $ref: "#/components/schemas/transferUSDTtoESCROWRequestDto"
          application/*+json:
            schema:
              $ref: "#/components/schemas/transferUSDTtoESCROWRequestDto"
      responses:
        "200":
          description: Success
          content:
            text/plain:
              schema:
                $ref: "#/components/schemas/transferUSDTtoESCROWResponseDto"
            application/json:
              schema:
                $ref: "#/components/schemas/transferUSDTtoESCROWResponseDto"
            text/json:
              schema:
                $ref: "#/components/schemas/transferUSDTtoESCROWResponseDto"
      security:
        - default: []
      x-throttling-tier: Unlimited
      x-auth-type: Application & Application User
      x-wso2-application-security:
        security-types:
          - oauth2
        optional: false
  /transactionHistoryByCustomerId:
    get:
      tags:
        - Smart Contract
      parameters:
        - name: page
          in: query
          required: false
          style: form
          explode: true
          schema:
            type: integer
            format: int32
        - name: limits
          in: query
          required: false
          style: form
          explode: true
          schema:
            type: integer
            format: int32
        - name: customerId
          in: query
          required: false
          style: form
          explode: true
          schema:
            type: string
      responses:
        "200":
          description: Success
          content:
            text/plain:
              schema:
                $ref: "#/components/schemas/TransactionHistoryByCustomerIdResponseDto"
            application/json:
              schema:
                $ref: "#/components/schemas/TransactionHistoryByCustomerIdResponseDto"
            text/json:
              schema:
                $ref: "#/components/schemas/TransactionHistoryByCustomerIdResponseDto"
      security:
        - default: []
      x-throttling-tier: Unlimited
      x-auth-type: Application & Application User
      x-wso2-application-security:
        security-types:
          - oauth2
        optional: false
  /bulkReserve:
    post:
      tags:
        - Smart Contract
      summary: Bulk Reserve Tokens by orderId
      parameters:
        - name: tenantId
          in: header
          description: Tenant Id
          required: true
          style: simple
          explode: false
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              type: array
              items:
                type: string
        required: true
      responses:
        "200":
          description: ""
      security:
        - default: []
      x-throttling-tier: Unlimited
      x-auth-type: Application & Application User
      x-wso2-application-security:
        security-types:
          - oauth2
        optional: false
  /getGlobalSetting:
    get:
      tags:
        - Global Settings
      summary: Get All Settings By Tenant Id
      parameters:
        - name: tenantId
          in: header
          description: Tenant Id
          required: true
          style: simple
          explode: false
          schema:
            type: string
        - name: page
          in: query
          required: true
          style: form
          explode: true
          schema:
            type: number
            default: 1
        - name: limits
          in: query
          required: true
          style: form
          explode: true
          schema:
            type: number
            default: 5
      responses:
        "200":
          description: ""
      security:
        - default: []
      x-throttling-tier: Unlimited
      x-auth-type: Application & Application User
      x-wso2-application-security:
        security-types:
          - oauth2
        optional: false
  "/updateGlobalSetting/{id}":
    put:
      tags:
        - Global Settings
      summary: update setting
      parameters:
        - name: tenantId
          in: header
          description: Tenant Id
          required: true
          style: simple
          explode: false
          schema:
            type: string
        - name: id
          in: path
          required: true
          style: simple
          explode: false
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/UpdateSettingDto"
        required: true
      responses:
        "200":
          description: ""
      security:
        - default: []
      x-throttling-tier: Unlimited
      x-auth-type: Application & Application User
      x-wso2-application-security:
        security-types:
          - oauth2
        optional: false
  /rule:
    get:
      tags:
        - Rules
      summary: Get All Rule By Tenant Id
      parameters:
        - name: tenantId
          in: header
          description: Tenant Id
          required: true
          style: simple
          explode: false
          schema:
            type: string
        - name: page
          in: query
          required: true
          style: form
          explode: true
          schema:
            type: number
            default: 1
        - name: limits
          in: query
          required: true
          style: form
          explode: true
          schema:
            type: number
            default: 5
      responses:
        "200":
          description: ""
      security:
        - default: []
      x-throttling-tier: Unlimited
      x-auth-type: Application & Application User
      x-wso2-application-security:
        security-types:
          - oauth2
        optional: false
  /rule/getRulesByOperationType:
    get:
      tags:
        - Rules
      summary: Get  rules by tenant id and operation type
      parameters:
        - name: tenantId
          in: header
          description: Tenant Id
          required: true
          style: simple
          explode: false
          schema:
            type: string
        - name: page
          in: query
          required: true
          style: form
          explode: true
          schema:
            type: number
            default: 1
        - name: limits
          in: query
          required: true
          style: form
          explode: true
          schema:
            type: number
            default: 5
        - name: operationType
          in: query
          required: true
          style: form
          explode: true
          schema:
            type: string
      responses:
        "200":
          description: ""
      security:
        - default: []
      x-throttling-tier: Unlimited
      x-auth-type: Application & Application User
      x-wso2-application-security:
        security-types:
          - oauth2
        optional: false
  /rule/createRule:
    post:
      tags:
        - Rules
      summary: create rule
      parameters:
        - name: tenantId
          in: header
          description: Tenant Id
          required: true
          style: simple
          explode: false
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/CreateRuleDto"
        required: true
      responses:
        "200":
          description: ""
      security:
        - default: []
      x-throttling-tier: Unlimited
      x-auth-type: Application & Application User
      x-wso2-application-security:
        security-types:
          - oauth2
        optional: false
  "/rule/{id}":
    put:
      tags:
        - Rules
      summary: update rule
      parameters:
        - name: tenantId
          in: header
          description: Tenant Id
          required: true
          style: simple
          explode: false
          schema:
            type: string
        - name: id
          in: path
          required: true
          style: simple
          explode: false
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/UpdateRuleDto"
        required: true
      responses:
        "200":
          description: ""
      security:
        - default: []
      x-throttling-tier: Unlimited
      x-auth-type: Application & Application User
      x-wso2-application-security:
        security-types:
          - oauth2
        optional: false
  "/rule/{ruleId}":
    delete:
      tags:
        - Rules
      summary: Delete rule
      parameters:
        - name: tenantId
          in: header
          description: Tenant Id
          required: true
          style: simple
          explode: false
          schema:
            type: string
        - name: ruleId
          in: path
          required: true
          style: simple
          explode: false
          schema:
            type: string
      responses:
        "200":
          description: Deleted rule
      security:
        - default: []
      x-throttling-tier: Unlimited
      x-auth-type: Application & Application User
      x-wso2-application-security:
        security-types:
          - oauth2
        optional: false
components:
  schemas:
    CustomerWalletDto:
      type: object
      properties:
        customerId:
          type: string
    TransactionsDto:
      type: object
      properties:
        customerId:
          type: string
    ValidateUSDTDto:
      type: object
      properties:
        txHash:
          type: string
    GetDataForSwapDto:
      type: object
      properties:
        walletId:
          type: string
        amount:
          type: number
        orderStatus:
          type: string
    GetDataForTokenReserveDto:
      type: object
      properties:
        orderId:
          type: string
    GetDataForTokenTransferDto:
      type: object
      properties:
        walletId:
          type: string
        amount:
          type: number
        orderStatus:
          type: string
    CreateOrderDto:
      type: object
      properties:
        paymentId:
          type: string
        merchantTransactionId:
          type: string
        amount:
          type: number
        currency:
          type: string
        paymentBrand:
          type: string
        paymentMode:
          type: string
        paymentType:
          type: string
        accountId:
          type: string
        terminalId:
          type: number
        orderId:
          type: string
        organization:
          type: string
        card:
          type: string
        customer:
          type: string
        paymentStatus:
          type: string
        processType:
          type: string
        result:
          type: string
        timestamp:
          type: number
    UpdateOrderStatusDto:
      type: object
      properties:
        paymentId:
          type: string
        paymentStatus:
          type: string
    UpdateBulkOrderStatusByCustomerIdDto:
      type: object
      properties:
        customerId:
          type: string
    TransferCryptoDto:
      type: object
      properties:
        fromCustomerId:
          type: string
        toCustomerId:
          type: string
        amount:
          type: number
        createdBy:
          type: string
    BlockchainState:
      type: object
      properties:
        gas:
          type: integer
          format: int32
        gasPrice:
          type: integer
          format: int32
        nonce:
          type: integer
          format: int32
      additionalProperties: false
    Customer:
      type: object
      properties:
        id:
          type: string
          nullable: true
        createdAt:
          type: string
          format: date-time
        updatedAt:
          type: string
          format: date-time
        tenantId:
          nullable: true
        email:
          type: string
          nullable: true
        givenName:
          type: string
          nullable: true
        surname:
          type: string
          nullable: true
        ip:
          type: string
          nullable: true
        telnocc:
          type: string
          nullable: true
        phone:
          type: string
          nullable: true
      additionalProperties: false
    Order:
      type: object
      properties:
        id:
          type: string
          nullable: true
        createdAt:
          type: string
          format: date-time
        updatedAt:
          type: string
          format: date-time
        tenantId:
          type: string
          nullable: true
        cardNumber:
          type: string
          nullable: true
        paymentId:
          type: string
          nullable: true
        merchantTransactionId:
          type: string
          nullable: true
        amount:
          type: integer
          format: int32
        currency:
          type: string
          nullable: true
        paymentBrand:
          type: string
          nullable: true
        paymentMode:
          type: string
          nullable: true
        paymentType:
          type: string
          nullable: true
        accountId:
          nullable: true
        terminalId:
          type: integer
          format: int32
        statusHistory:
          type: array
          nullable: true
          items:
            type: string
        paymentStatus:
          type: string
          nullable: true
        processType:
          type: string
          nullable: true
        resultCode:
          type: integer
          format: int32
        resultDescription:
          type: string
          nullable: true
        timestamp:
          type: integer
          format: int32
        walletId:
          type: string
          nullable: true
        organizations:
          type: array
          nullable: true
          items:
            $ref: "#/components/schemas/Organization"
        customers:
          type: array
          nullable: true
          items:
            $ref: "#/components/schemas/Customer"
        transactions:
          type: array
          nullable: true
          items:
            $ref: "#/components/schemas/Transaction"
      additionalProperties: false
    Organization:
      type: object
      properties:
        id:
          type: string
          nullable: true
        createdAt:
          type: string
          format: date-time
        updatedAt:
          type: string
          format: date-time
        tenantId:
          type: string
          nullable: true
        ipgOrganizationId:
          type: string
          nullable: true
        legalName:
          type: string
          nullable: true
        tradingName:
          type: string
          nullable: true
        tenantName:
          nullable: true
      additionalProperties: false
    ReserveState:
      type: object
      properties:
        gas:
          type: integer
          format: int32
        gasPrice:
          type: integer
          format: int32
        nonce:
          type: integer
          format: int32
      additionalProperties: false
    SignData:
      type: object
      properties:
        adminWallet:
          type: string
          nullable: true
        escrowWallet:
          type: string
          nullable: true
        data:
          type: string
          nullable: true
        blockchainState:
          $ref: "#/components/schemas/BlockchainState"
      additionalProperties: false
    Transaction:
      type: object
      properties:
        id:
          type: string
          nullable: true
        createdAt:
          type: string
          format: date-time
        updatedAt:
          type: string
          format: date-time
        tenantId:
          type: string
          nullable: true
        operationType:
          type: string
          nullable: true
        merchantAddress:
          type: string
          nullable: true
        amount:
          type: integer
          format: int32
        reserveState:
          $ref: "#/components/schemas/ReserveState"
        reserveHash:
          type: string
          nullable: true
        signData:
          $ref: "#/components/schemas/SignData"
        signHash:
          type: string
          nullable: true
        submitTransactionHash:
          type: string
          nullable: true
        createdBy:
          type: string
          nullable: true
        orderId:
          type: string
          nullable: true
      additionalProperties: false
    TransactionHistoryByCustomerIdResponseDto:
      type: object
      properties:
        value:
          $ref: "#/components/schemas/TransactionHistoryByCustomerIdValue"
        isOk:
          type: boolean
        isErr:
          type: boolean
      additionalProperties: false
    TransactionHistoryByCustomerIdValue:
      type: object
      properties:
        orders:
          type: array
          nullable: true
          items:
            $ref: "#/components/schemas/Order"
        totalPages:
          type: integer
          format: int32
      additionalProperties: false
    transferUSDTtoESCROW:
      type: object
      properties:
        depositId:
          type: string
          nullable: true
        withdraw:
          type: string
          nullable: true
      additionalProperties: false
    transferUSDTtoESCROWRequestDto:
      type: object
      properties:
        fromCustomerId:
          type: string
          nullable: true
        toCustomerId:
          type: string
          nullable: true
        amount:
          type: number
          format: double
        createdBy:
          type: string
          nullable: true
      additionalProperties: false
    transferUSDTtoESCROWResponseDto:
      type: object
      properties:
        value:
          $ref: "#/components/schemas/transferUSDTtoESCROW"
        isOk:
          type: boolean
        isErr:
          type: boolean
      additionalProperties: false
    UpdateSettingDto:
      required:
        - key
        - value
      type: object
      properties:
        key:
          type: string
        value:
          type: string
    CreateRuleDto:
      required:
        - createdBy
        - interval
        - minimumAmount
        - operationType
        - time
        - timeZone
      type: object
      properties:
        interval:
          type: string
        time:
          type: string
        minimumAmount:
          type: number
        timeZone:
          type: string
        operationType:
          type: string
        createdBy:
          type: string
    UpdateRuleDto:
      required:
        - interval
        - minimumAmount
        - operationType
        - time
        - timeZone
        - updatedBy
      type: object
      properties:
        interval:
          type: string
        time:
          type: string
        minimumAmount:
          type: number
        timeZone:
          type: string
        operationType:
          type: string
        updatedBy:
          type: string
  securitySchemes:
    default:
      type: oauth2
      flows:
        implicit:
          authorizationUrl: "https://test.com"
          scopes: {}
x-wso2-auth-header: Authorization
x-wso2-cors:
  corsConfigurationEnabled: true
  accessControlAllowOrigins:
    - "*"
  accessControlAllowCredentials: false
  accessControlAllowHeaders:
    - authorization
    - Access-Control-Allow-Origin
    - Content-Type
    - SOAPAction
    - apikey
    - Internal-Key
    - TenantId
  accessControlAllowMethods:
    - GET
    - PUT
    - POST
    - DELETE
    - PATCH
    - OPTIONS
x-wso2-production-endpoints:
  urls:
    - "https://endpoint-sandbox.local.sepa-cyber.com/erc20"
  type: http
x-wso2-sandbox-endpoints:
  urls:
    - "https://endpoint-sandbox.local.sepa-cyber.com/erc20"
  type: http
x-wso2-basePath: /erc20/1.0.0
x-wso2-transports:
  - http
  - https
x-wso2-response-cache:
  enabled: false
  cacheTimeoutInSeconds: 300
